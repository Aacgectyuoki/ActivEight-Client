{"ast":null,"code":"var _jsxFileName = \"/Users/aacgectyuoki/Desktop/activ8/client/src/pages/RecoveryRoutine.js\",\n  _s = $RefreshSig$();\n// src/pages/RecoveryRoutine.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecoveryRoutine = () => {\n  _s();\n  // Sample exercises data (can be fetched from an API)\n  const exercises = [{\n    id: 1,\n    name: 'Foam Rolling',\n    description: 'Self-myofascial release for muscle relaxation.'\n  }, {\n    id: 2,\n    name: 'Static Hamstring Stretch',\n    description: 'Hold to stretch hamstrings and reduce tension.'\n  }, {\n    id: 3,\n    name: 'Diaphragmatic Breathing',\n    description: 'Deep breathing exercises to promote recovery.'\n  }, {\n    id: 4,\n    name: 'Jefferson Curl',\n    description: 'Controlled spinal flexion exercise to increase hamstring and lower back flexibility.'\n  }, {\n    id: 5,\n    name: 'Couch Stretch',\n    description: 'Deep stretch for the hip flexors and quadriceps, beneficial for those who sit often.'\n  }, {\n    id: 6,\n    name: 'Pigeon Pose',\n    description: 'Yoga pose to open the hips and stretch the glutes and piriformis.'\n  }, {\n    id: 7,\n    name: 'Standing Pancake (Groin Stretch)',\n    description: 'Stretch for the adductors and hamstrings by bending forward in a wide stance.'\n  }, {\n    id: 8,\n    name: 'Butterfly Stretch',\n    description: 'Seated stretch to open the hips and groin by bringing the soles of the feet together.'\n  }, {\n    id: 9,\n    name: 'Child\\'s Pose',\n    description: 'Restorative yoga pose for stretching the lower back and relaxing the body.'\n  }, {\n    id: 10,\n    name: 'Cat-Cow Stretch',\n    description: 'Dynamic yoga sequence for spinal flexibility and mobility.'\n  }, {\n    id: 11,\n    name: 'Figure 4 Stretch',\n    description: 'Stretches the glutes and piriformis by crossing one leg over the other in a seated or supine position.'\n  }, {\n    id: 12,\n    name: 'Thoracic Spine Rotation',\n    description: 'Rotational movement to improve mobility in the thoracic spine and reduce upper back tightness.'\n  }, {\n    id: 13,\n    name: 'Hip Flexor Stretch',\n    description: 'Lunge-based stretch to lengthen the hip flexors and improve hip mobility.'\n  }, {\n    id: 14,\n    name: 'Seated Forward Fold',\n    description: 'Stretch for the hamstrings and lower back by reaching forward while seated.'\n  }, {\n    id: 15,\n    name: 'Wall Angels',\n    description: 'Posture exercise to improve shoulder mobility and upper back strength.'\n  }];\n\n  // State for selected exercises\n  const [selectedExercises, setSelectedExercises] = useState([]);\n\n  // Function to handle exercise selection\n  const toggleExercise = exercise => {\n    if (selectedExercises.includes(exercise)) {\n      setSelectedExercises(selectedExercises.filter(e => e !== exercise));\n    } else {\n      setSelectedExercises([...selectedExercises, exercise]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recovery Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select exercises to create your personalized recovery routine:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedExercises.includes(exercise.name),\n          onChange: () => toggleExercise(exercise.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), exercise.name, \" - \", exercise.description]\n      }, exercise.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Selected Exercises:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RecoveryRoutine, \"UHNmaoBywUS+awnxwF08Z+Bpx9g=\");\n_c = RecoveryRoutine;\nexport default RecoveryRoutine;\n\n// import React from 'react';\n\n// const RecoveryRoutine = () => {\n//   return (\n//     <div>\n//       <h1>Recovery Routine</h1>\n//       <p>Here you can find your personalized recovery routine.</p>\n//     </div>\n//   );\n// };\n\n// export default RecoveryRoutine;\nvar _c;\n$RefreshReg$(_c, \"RecoveryRoutine\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecoveryRoutine","_s","exercises","id","name","description","selectedExercises","setSelectedExercises","toggleExercise","exercise","includes","filter","e","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","index","_c","$RefreshReg$"],"sources":["/Users/aacgectyuoki/Desktop/activ8/client/src/pages/RecoveryRoutine.js"],"sourcesContent":["// src/pages/RecoveryRoutine.js\nimport React, { useState } from 'react';\n\nconst RecoveryRoutine = () => {\n  // Sample exercises data (can be fetched from an API)\n  const exercises = [\n    { id: 1, name: 'Foam Rolling', description: 'Self-myofascial release for muscle relaxation.' },\n    { id: 2, name: 'Static Hamstring Stretch', description: 'Hold to stretch hamstrings and reduce tension.' },\n    { id: 3, name: 'Diaphragmatic Breathing', description: 'Deep breathing exercises to promote recovery.' },\n    { id: 4, name: 'Jefferson Curl', description: 'Controlled spinal flexion exercise to increase hamstring and lower back flexibility.' },\n    { id: 5, name: 'Couch Stretch', description: 'Deep stretch for the hip flexors and quadriceps, beneficial for those who sit often.' },\n    { id: 6, name: 'Pigeon Pose', description: 'Yoga pose to open the hips and stretch the glutes and piriformis.' },\n    { id: 7, name: 'Standing Pancake (Groin Stretch)', description: 'Stretch for the adductors and hamstrings by bending forward in a wide stance.' },\n    { id: 8, name: 'Butterfly Stretch', description: 'Seated stretch to open the hips and groin by bringing the soles of the feet together.' },\n    { id: 9, name: 'Child\\'s Pose', description: 'Restorative yoga pose for stretching the lower back and relaxing the body.' },\n    { id: 10, name: 'Cat-Cow Stretch', description: 'Dynamic yoga sequence for spinal flexibility and mobility.' },\n    { id: 11, name: 'Figure 4 Stretch', description: 'Stretches the glutes and piriformis by crossing one leg over the other in a seated or supine position.' },\n    { id: 12, name: 'Thoracic Spine Rotation', description: 'Rotational movement to improve mobility in the thoracic spine and reduce upper back tightness.' },\n    { id: 13, name: 'Hip Flexor Stretch', description: 'Lunge-based stretch to lengthen the hip flexors and improve hip mobility.' },\n    { id: 14, name: 'Seated Forward Fold', description: 'Stretch for the hamstrings and lower back by reaching forward while seated.' },\n    { id: 15, name: 'Wall Angels', description: 'Posture exercise to improve shoulder mobility and upper back strength.' },\n  ];\n  \n\n  // State for selected exercises\n  const [selectedExercises, setSelectedExercises] = useState([]);\n\n  // Function to handle exercise selection\n  const toggleExercise = (exercise) => {\n    if (selectedExercises.includes(exercise)) {\n      setSelectedExercises(selectedExercises.filter((e) => e !== exercise));\n    } else {\n      setSelectedExercises([...selectedExercises, exercise]);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Recovery Routine</h1>\n      <p>Select exercises to create your personalized recovery routine:</p>\n      <ul>\n        {exercises.map((exercise) => (\n          <li key={exercise.id}>\n            <input\n              type=\"checkbox\"\n              checked={selectedExercises.includes(exercise.name)}\n              onChange={() => toggleExercise(exercise.name)}\n            />\n            {exercise.name} - {exercise.description}\n          </li>\n        ))}\n      </ul>\n      <h2>Your Selected Exercises:</h2>\n      <ul>\n        {selectedExercises.map((exercise, index) => (\n          <li key={index}>{exercise}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RecoveryRoutine;\n\n// import React from 'react';\n\n// const RecoveryRoutine = () => {\n//   return (\n//     <div>\n//       <h1>Recovery Routine</h1>\n//       <p>Here you can find your personalized recovery routine.</p>\n//     </div>\n//   );\n// };\n\n// export default RecoveryRoutine;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}